//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DeveloperTestModel", "FK_Products_Brands", "Brands", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Data.Brand), "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Product), true)]
[assembly: EdmRelationshipAttribute("DeveloperTestModel", "FK_Products_Colours", "Colours", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Data.Colour), "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Product), true)]
[assembly: EdmRelationshipAttribute("DeveloperTestModel", "FK_Customers_DiscountGroups", "DiscountGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.DiscountGroup), "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Customer), true)]
[assembly: EdmRelationshipAttribute("DeveloperTestModel", "FK_Products_Sizes", "Sizes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Data.Size), "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Product), true)]

#endregion

namespace Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DeveloperTestEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DeveloperTestEntities object using the connection string found in the 'DeveloperTestEntities' section of the application configuration file.
        /// </summary>
        public DeveloperTestEntities() : base("name=DeveloperTestEntities", "DeveloperTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DeveloperTestEntities object.
        /// </summary>
        public DeveloperTestEntities(string connectionString) : base(connectionString, "DeveloperTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DeveloperTestEntities object.
        /// </summary>
        public DeveloperTestEntities(EntityConnection connection) : base(connection, "DeveloperTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Brand> Brands
        {
            get
            {
                if ((_Brands == null))
                {
                    _Brands = base.CreateObjectSet<Brand>("Brands");
                }
                return _Brands;
            }
        }
        private ObjectSet<Brand> _Brands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Colour> Colours
        {
            get
            {
                if ((_Colours == null))
                {
                    _Colours = base.CreateObjectSet<Colour>("Colours");
                }
                return _Colours;
            }
        }
        private ObjectSet<Colour> _Colours;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DiscountGroup> DiscountGroups
        {
            get
            {
                if ((_DiscountGroups == null))
                {
                    _DiscountGroups = base.CreateObjectSet<DiscountGroup>("DiscountGroups");
                }
                return _DiscountGroups;
            }
        }
        private ObjectSet<DiscountGroup> _DiscountGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Size> Sizes
        {
            get
            {
                if ((_Sizes == null))
                {
                    _Sizes = base.CreateObjectSet<Size>("Sizes");
                }
                return _Sizes;
            }
        }
        private ObjectSet<Size> _Sizes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Brands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrands(Brand brand)
        {
            base.AddObject("Brands", brand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Colours EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToColours(Colour colour)
        {
            base.AddObject("Colours", colour);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DiscountGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiscountGroups(DiscountGroup discountGroup)
        {
            base.AddObject("DiscountGroups", discountGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sizes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSizes(Size size)
        {
            base.AddObject("Sizes", size);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeveloperTestModel", Name="Brand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Brand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Brand object.
        /// </summary>
        /// <param name="brandId">Initial value of the BrandId property.</param>
        /// <param name="brandName">Initial value of the BrandName property.</param>
        public static Brand CreateBrand(global::System.Int32 brandId, global::System.String brandName)
        {
            Brand brand = new Brand();
            brand.BrandId = brandId;
            brand.BrandName = brandName;
            return brand;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                if (_BrandId != value)
                {
                    OnBrandIdChanging(value);
                    ReportPropertyChanging("BrandId");
                    _BrandId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BrandId");
                    OnBrandIdChanged();
                }
            }
        }
        private global::System.Int32 _BrandId;
        partial void OnBrandIdChanging(global::System.Int32 value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrandName
        {
            get
            {
                return _BrandName;
            }
            set
            {
                OnBrandNameChanging(value);
                ReportPropertyChanging("BrandName");
                _BrandName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrandName");
                OnBrandNameChanged();
            }
        }
        private global::System.String _BrandName;
        partial void OnBrandNameChanging(global::System.String value);
        partial void OnBrandNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeveloperTestModel", "FK_Products_Brands", "Products")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("DeveloperTestModel.FK_Products_Brands", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("DeveloperTestModel.FK_Products_Brands", "Products", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeveloperTestModel", Name="Colour")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Colour : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Colour object.
        /// </summary>
        /// <param name="colourId">Initial value of the ColourId property.</param>
        /// <param name="colourName">Initial value of the ColourName property.</param>
        public static Colour CreateColour(global::System.Int32 colourId, global::System.String colourName)
        {
            Colour colour = new Colour();
            colour.ColourId = colourId;
            colour.ColourName = colourName;
            return colour;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColourId
        {
            get
            {
                return _ColourId;
            }
            set
            {
                if (_ColourId != value)
                {
                    OnColourIdChanging(value);
                    ReportPropertyChanging("ColourId");
                    _ColourId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ColourId");
                    OnColourIdChanged();
                }
            }
        }
        private global::System.Int32 _ColourId;
        partial void OnColourIdChanging(global::System.Int32 value);
        partial void OnColourIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ColourName
        {
            get
            {
                return _ColourName;
            }
            set
            {
                OnColourNameChanging(value);
                ReportPropertyChanging("ColourName");
                _ColourName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ColourName");
                OnColourNameChanged();
            }
        }
        private global::System.String _ColourName;
        partial void OnColourNameChanging(global::System.String value);
        partial void OnColourNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeveloperTestModel", "FK_Products_Colours", "Products")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("DeveloperTestModel.FK_Products_Colours", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("DeveloperTestModel.FK_Products_Colours", "Products", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeveloperTestModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="customerName">Initial value of the CustomerName property.</param>
        /// <param name="discountGroupId">Initial value of the DiscountGroupId property.</param>
        public static Customer CreateCustomer(global::System.Int32 customerId, global::System.String customerName, global::System.Int32 discountGroupId)
        {
            Customer customer = new Customer();
            customer.CustomerId = customerId;
            customer.CustomerName = customerName;
            customer.DiscountGroupId = discountGroupId;
            return customer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                if (_CustomerId != value)
                {
                    OnCustomerIdChanging(value);
                    ReportPropertyChanging("CustomerId");
                    _CustomerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerId");
                    OnCustomerIdChanged();
                }
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiscountGroupId
        {
            get
            {
                return _DiscountGroupId;
            }
            set
            {
                OnDiscountGroupIdChanging(value);
                ReportPropertyChanging("DiscountGroupId");
                _DiscountGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountGroupId");
                OnDiscountGroupIdChanged();
            }
        }
        private global::System.Int32 _DiscountGroupId;
        partial void OnDiscountGroupIdChanging(global::System.Int32 value);
        partial void OnDiscountGroupIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeveloperTestModel", "FK_Customers_DiscountGroups", "DiscountGroups")]
        public DiscountGroup DiscountGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountGroup>("DeveloperTestModel.FK_Customers_DiscountGroups", "DiscountGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountGroup>("DeveloperTestModel.FK_Customers_DiscountGroups", "DiscountGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DiscountGroup> DiscountGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountGroup>("DeveloperTestModel.FK_Customers_DiscountGroups", "DiscountGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DiscountGroup>("DeveloperTestModel.FK_Customers_DiscountGroups", "DiscountGroups", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeveloperTestModel", Name="DiscountGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DiscountGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DiscountGroup object.
        /// </summary>
        /// <param name="discountGroupId">Initial value of the DiscountGroupId property.</param>
        /// <param name="discountGroupName">Initial value of the DiscountGroupName property.</param>
        /// <param name="discountPercentage">Initial value of the DiscountPercentage property.</param>
        public static DiscountGroup CreateDiscountGroup(global::System.Int32 discountGroupId, global::System.String discountGroupName, global::System.Byte discountPercentage)
        {
            DiscountGroup discountGroup = new DiscountGroup();
            discountGroup.DiscountGroupId = discountGroupId;
            discountGroup.DiscountGroupName = discountGroupName;
            discountGroup.DiscountPercentage = discountPercentage;
            return discountGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiscountGroupId
        {
            get
            {
                return _DiscountGroupId;
            }
            set
            {
                if (_DiscountGroupId != value)
                {
                    OnDiscountGroupIdChanging(value);
                    ReportPropertyChanging("DiscountGroupId");
                    _DiscountGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DiscountGroupId");
                    OnDiscountGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _DiscountGroupId;
        partial void OnDiscountGroupIdChanging(global::System.Int32 value);
        partial void OnDiscountGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscountGroupName
        {
            get
            {
                return _DiscountGroupName;
            }
            set
            {
                OnDiscountGroupNameChanging(value);
                ReportPropertyChanging("DiscountGroupName");
                _DiscountGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscountGroupName");
                OnDiscountGroupNameChanged();
            }
        }
        private global::System.String _DiscountGroupName;
        partial void OnDiscountGroupNameChanging(global::System.String value);
        partial void OnDiscountGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte DiscountPercentage
        {
            get
            {
                return _DiscountPercentage;
            }
            set
            {
                OnDiscountPercentageChanging(value);
                ReportPropertyChanging("DiscountPercentage");
                _DiscountPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountPercentage");
                OnDiscountPercentageChanged();
            }
        }
        private global::System.Byte _DiscountPercentage;
        partial void OnDiscountPercentageChanging(global::System.Byte value);
        partial void OnDiscountPercentageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeveloperTestModel", "FK_Customers_DiscountGroups", "Customers")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("DeveloperTestModel.FK_Customers_DiscountGroups", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("DeveloperTestModel.FK_Customers_DiscountGroups", "Customers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeveloperTestModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="costPrice">Initial value of the CostPrice property.</param>
        /// <param name="sellPrice">Initial value of the SellPrice property.</param>
        public static Product CreateProduct(global::System.Int32 productId, global::System.String productName, global::System.Decimal costPrice, global::System.Decimal sellPrice)
        {
            Product product = new Product();
            product.ProductId = productId;
            product.ProductName = productName;
            product.CostPrice = costPrice;
            product.SellPrice = sellPrice;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CostPrice
        {
            get
            {
                return _CostPrice;
            }
            set
            {
                OnCostPriceChanging(value);
                ReportPropertyChanging("CostPrice");
                _CostPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostPrice");
                OnCostPriceChanged();
            }
        }
        private global::System.Decimal _CostPrice;
        partial void OnCostPriceChanging(global::System.Decimal value);
        partial void OnCostPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SellPrice
        {
            get
            {
                return _SellPrice;
            }
            set
            {
                OnSellPriceChanging(value);
                ReportPropertyChanging("SellPrice");
                _SellPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellPrice");
                OnSellPriceChanged();
            }
        }
        private global::System.Decimal _SellPrice;
        partial void OnSellPriceChanging(global::System.Decimal value);
        partial void OnSellPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                OnBrandIdChanging(value);
                ReportPropertyChanging("BrandId");
                _BrandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandId");
                OnBrandIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BrandId;
        partial void OnBrandIdChanging(Nullable<global::System.Int32> value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ColourId
        {
            get
            {
                return _ColourId;
            }
            set
            {
                OnColourIdChanging(value);
                ReportPropertyChanging("ColourId");
                _ColourId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColourId");
                OnColourIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ColourId;
        partial void OnColourIdChanging(Nullable<global::System.Int32> value);
        partial void OnColourIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SizeId
        {
            get
            {
                return _SizeId;
            }
            set
            {
                OnSizeIdChanging(value);
                ReportPropertyChanging("SizeId");
                _SizeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SizeId");
                OnSizeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SizeId;
        partial void OnSizeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSizeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeveloperTestModel", "FK_Products_Brands", "Brands")]
        public Brand Brand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("DeveloperTestModel.FK_Products_Brands", "Brands").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("DeveloperTestModel.FK_Products_Brands", "Brands").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Brand> BrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("DeveloperTestModel.FK_Products_Brands", "Brands");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Brand>("DeveloperTestModel.FK_Products_Brands", "Brands", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeveloperTestModel", "FK_Products_Colours", "Colours")]
        public Colour Colour
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Colour>("DeveloperTestModel.FK_Products_Colours", "Colours").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Colour>("DeveloperTestModel.FK_Products_Colours", "Colours").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Colour> ColourReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Colour>("DeveloperTestModel.FK_Products_Colours", "Colours");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Colour>("DeveloperTestModel.FK_Products_Colours", "Colours", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeveloperTestModel", "FK_Products_Sizes", "Sizes")]
        public Size Size
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Size>("DeveloperTestModel.FK_Products_Sizes", "Sizes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Size>("DeveloperTestModel.FK_Products_Sizes", "Sizes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Size> SizeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Size>("DeveloperTestModel.FK_Products_Sizes", "Sizes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Size>("DeveloperTestModel.FK_Products_Sizes", "Sizes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeveloperTestModel", Name="Size")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Size : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Size object.
        /// </summary>
        /// <param name="sizeId">Initial value of the SizeId property.</param>
        /// <param name="sizeName">Initial value of the SizeName property.</param>
        public static Size CreateSize(global::System.Int32 sizeId, global::System.String sizeName)
        {
            Size size = new Size();
            size.SizeId = sizeId;
            size.SizeName = sizeName;
            return size;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SizeId
        {
            get
            {
                return _SizeId;
            }
            set
            {
                if (_SizeId != value)
                {
                    OnSizeIdChanging(value);
                    ReportPropertyChanging("SizeId");
                    _SizeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SizeId");
                    OnSizeIdChanged();
                }
            }
        }
        private global::System.Int32 _SizeId;
        partial void OnSizeIdChanging(global::System.Int32 value);
        partial void OnSizeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SizeName
        {
            get
            {
                return _SizeName;
            }
            set
            {
                OnSizeNameChanging(value);
                ReportPropertyChanging("SizeName");
                _SizeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SizeName");
                OnSizeNameChanged();
            }
        }
        private global::System.String _SizeName;
        partial void OnSizeNameChanging(global::System.String value);
        partial void OnSizeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeveloperTestModel", "FK_Products_Sizes", "Products")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("DeveloperTestModel.FK_Products_Sizes", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("DeveloperTestModel.FK_Products_Sizes", "Products", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeveloperTestModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }

    #endregion

    
}
